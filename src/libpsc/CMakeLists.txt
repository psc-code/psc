
add_library(psc
  integrate.cxx
  mfields.cxx
  mparticles.cxx
  psc.cxx
  psc_checkpoint.cxx
  psc_fields_c.cxx
  psc_fields_single.cxx
  psc_particles_impl.cxx
  psc_stats.cxx
  rngpool.cxx

  psc_collision/psc_collision_impl.cxx

  psc_balance/psc_balance.cxx

  vpic/psc_particles_vpic.cxx
  vpic/psc_fields_vpic.cxx
  vpic/psc_vpic_bits.cxx
  vpic/vpic_base.cxx
  )
target_include_directories(psc PUBLIC ../include)
target_link_libraries(psc PUBLIC kg mrc)
target_link_libraries(psc PUBLIC kg MPI::MPI_CXX)
target_compile_features(psc PUBLIC cxx_std_11)

if (USE_CUDA)
  target_sources(psc PRIVATE
    cuda/cuda_base.cu

    cuda/psc_particles_cuda.cxx
    cuda/cuda_mparticles_base.cu
    cuda/cuda_mparticles.cu
    cuda/cuda_mparticles_iface.cu
    
    cuda/psc_fields_cuda.cxx
    cuda/cuda_mfields.cu
    cuda/cuda_mfields_iface.cu
    
    cuda/cuda_push_mprts_yz.cu
    
    cuda/cuda_push_fields_yz.cu
    cuda/cuda_push_fields_xyz.cu
    
    cuda/bnd_particles_cuda_impl.cu
    cuda/cuda_bndp.cu
    cuda/cuda_bndp_scan.cu
    cuda/cuda_bndp_spine.cu
    
    cuda/cuda_bnd.cu
    cuda/bnd_cuda_3_impl.cu
    
    cuda/psc_bnd_fields_cuda.cxx
    cuda/cuda_mfields_bnd.cu
    
    cuda/cuda_moments_1st_nc.cu
    
    cuda/collision_cuda_impl.cu
    
    cuda/cuda_heating.cu)
  target_include_directories(psc PUBLIC cuda)
endif()

if (PSC_HAVE_RMM)
  target_link_libraries(psc PUBLIC rmm::rmm)
endif()

if (USE_VPIC)
  add_library(VPIC::VPIC INTERFACE IMPORTED)
  set_target_properties(VPIC::VPIC PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "/Users/kai/build/vpic/src"
    INTERFACE_LINK_LIBRARIES "/Users/kai/build/vpic/build/libvpic.a"
  )

  target_link_libraries(psc PUBLIC VPIC::VPIC)
endif()

if (BUILD_TESTING)
  add_subdirectory(tests)
endif()
